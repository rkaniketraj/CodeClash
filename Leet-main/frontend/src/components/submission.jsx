const data =  [
  {
    title: "Minimum Cost Good Caption",
    titleSlug: "minimum-cost-good-caption",
    timestamp: "1738424953",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Minimum Cost Good Caption",
    titleSlug: "minimum-cost-good-caption",
    timestamp: "1738424242",
    statusDisplay: "Wrong Answer",
    lang: "cpp",
  },
  {
    title: "Reschedule Meetings for Maximum Free Time II",
    titleSlug: "reschedule-meetings-for-maximum-free-time-ii",
    timestamp: "1738421942",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Reschedule Meetings for Maximum Free Time I",
    titleSlug: "reschedule-meetings-for-maximum-free-time-i",
    timestamp: "1738421029",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Find Valid Pair of Adjacent Digits in String",
    titleSlug: "find-valid-pair-of-adjacent-digits-in-string",
    timestamp: "1738420444",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Longest Special Path",
    titleSlug: "longest-special-path",
    timestamp: "1737213141",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Minimum Cost to Make Arrays Identical",
    titleSlug: "minimum-cost-to-make-arrays-identical",
    timestamp: "1737211020",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Maximum Difference Between Adjacent Elements in a Circular Array",
    titleSlug:
      "maximum-difference-between-adjacent-elements-in-a-circular-array",
    timestamp: "1737210758",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Count Non-Decreasing Subarrays After K Operations",
    titleSlug: "count-non-decreasing-subarrays-after-k-operations",
    timestamp: "1736675459",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Count Non-Decreasing Subarrays After K Operations",
    titleSlug: "count-non-decreasing-subarrays-after-k-operations",
    timestamp: "1736658544",
    statusDisplay: "Wrong Answer",
    lang: "cpp",
  },
  {
    title: "Count Non-Decreasing Subarrays After K Operations",
    titleSlug: "count-non-decreasing-subarrays-after-k-operations",
    timestamp: "1736657899",
    statusDisplay: "Runtime Error",
    lang: "cpp",
  },
  {
    title: "Count Non-Decreasing Subarrays After K Operations",
    titleSlug: "count-non-decreasing-subarrays-after-k-operations",
    timestamp: "1736654434",
    statusDisplay: "Runtime Error",
    lang: "cpp",
  },
  {
    title: "Minimize the Maximum Edge Weight of Graph",
    titleSlug: "minimize-the-maximum-edge-weight-of-graph",
    timestamp: "1736650746",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Maximum Amount of Money Robot Can Earn",
    titleSlug: "maximum-amount-of-money-robot-can-earn",
    timestamp: "1736650063",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Zigzag Grid Traversal With Skip",
    titleSlug: "zigzag-grid-traversal-with-skip",
    timestamp: "1736649259",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Maximum Subarray With Equal Products",
    titleSlug: "maximum-subarray-with-equal-products",
    timestamp: "1736051003",
    statusDisplay: "Accepted",
    lang: "cpp",
  },
  {
    title: "Maximum Subarray With Equal Products",
    titleSlug: "maximum-subarray-with-equal-products",
    timestamp: "1736050844",
    statusDisplay: "Wrong Answer",
    lang: "cpp",
  },
  {
    title: "Maximum Subarray With Equal Products",
    titleSlug: "maximum-subarray-with-equal-products",
    timestamp: "1736050813",
    statusDisplay: "Runtime Error",
    lang: "cpp",
  },
  {
    title: "Maximum Subarray With Equal Products",
    titleSlug: "maximum-subarray-with-equal-products",
    timestamp: "1736049602",
    statusDisplay: "Wrong Answer",
    lang: "cpp",
  },
  {
    title: "Maximum Subarray With Equal Products",
    titleSlug: "maximum-subarray-with-equal-products",
    timestamp: "1736049577",
    statusDisplay: "Wrong Answer",
    lang: "cpp",
  },
];
export default data;
